name: auto-git-issue-actions

run-name: ${{ github.actor }} is issueing for ToDoList GitHub Actions

on:
  workflow_dispatch:
  schedule: 
   - cron: "00 23 * * *"

jobs:
  open-issue:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: Check Current Time
        id: check-time
        run: |
          date
          echo "::set-output name=hour::$(date -d '+9 hours' +'%H')"

      - name: Time Testing
        id: time_testing
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            const currentDate = new Date();
            console.log("현재 시각 : " + currentDate.getHours());
            const kTime = currentDate.getHours() + 9
            console.log("현재 시각 + 9 : " + kTime);  
            const korOffset = 9 * 60;
            const currentKOR = new Date(currentDate.getTime() + korOffset * 60000);
            const dayOfWeek = currentKOR.getDay();
            if (dayOfWeek === 0) {
              console.log("일요일입니다. 종료 합니다.");
            }
            else if (dayOfWeek === 6) {
              console.log("토요일입니다. 종료 합니다.");
            }
            else {
              console.log("현재는 평일입니다!");
            }

      - name: Create Issue 
        id: create_issue
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.TOKEN}}
          script: |
            const currentDate = new Date();
            const korOffset = 9 * 60;
            const currentKOR = new Date(currentDate.getTime() + korOffset * 60000);
            const dayOfWeek = currentKOR.getDay();
            if (dayOfWeek === 0) {
              console.log("일요일입니다. 종료 합니다.");
              return;
            }
            else if (dayOfWeek === 6) {
              console.log("토요일입니다. 종료 합니다.");
              return ;
            }
            else 
              console.log("현재는 평일입니다!" + '\n' + "ToDo List issue 를 발행합니다.");
            const currentDate = new Date();
            currentDate.setHours(currentDate.getHours() + 9);
            const date = currentDate.toISOString().split('T')[0];
            const issueTitle = `${date}-TODO`;
            const issueBody1 = `# 투두리스트 작성하는 법\n`;
            const issueBody2 = `### (1) 아래 코멘트로 오늘 할 일 적기.\n`;
            const issueBody3 = `### (2) 저녁 8시 전까지 무슨 일을 하셨는지 체킹하기.\n`;
            const issueBody4 = `### 참고사항 본인의 작업 코드에 해당하는 이슈 링크 첨부 권장 (그 사람이 전체적인 작업 현황을 쉽게 볼 수 있으면 좋겠다는 의견)`;
            const issueBody5 = `
            # 분류된 작업
            
            #### jujeon 
            - 개인정보동의약관
            - 모집글쓰기 작성 및 수정
            - 히치하이킹
            - 관리자페이지
                
            #### hoslim
            - 팀설정페이지
            - 검색
            - PWA
            
            #### hyna
            - 마이페이지, 프로필, 홈페이지설정
            - 피어로그
            
            #### hujeong
            - 회원가입
            - 탈퇴
            - 마이페이지 개인정보
            
            #### hyeokim2
            - 메인페이지, 네비게이션바, 탭바
            - 모집글 뷰
            - DnD
            
            #### jeyoon
            - 팀페이지 메인화면
            - 쪽지
            - 툭박스(위젯)
            
            #### woorikim
            - 로그인
            - 비밀번호 찾기
            - 쇼케이스
            
            #### haryu
            - 알림 (nest)
            - 쪽지
            - socket (온라인 여부 관리 등)
            - Algorithm (개인성향 측정, 팀평가)
            
            #### jwee
            - 게시판
            - Algorithm (개인성향 측정, 팀평가)
            - 피어로그
            
            #### hyeongki
            - 사용자추적
            - 고나리자
            - 인공지능 입출력 (chatGPT)
            
            #### juhyelee
            - 프로필
            - 회원
            - 피어로그
            - 업적
            
            #### junssong
            - 회원
            - 팀 (팀페이지, 팀설정 등)
            
            #### wochae
            - 알람 (스프링)
            - 인공지능 입출력 (chatGPT)`;
            const issueBody = issueBody1 + issueBody2 + issueBody3 + issueBody4 + issueBody5;

            const owner = "peer-42seoul";
            const repo = "mangement-team-todo";
            const newIssue = await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody
            });


# 깃헙 액션 로직 
# 1. 8시 30분 
# 2. 깃 액션으로 이슈 활성화
# 3. 깃 핀드 진행하기
# 4. 내용 집어넣기
# 5. 이메일 알람 보내기 

# 1. 저녁 8시이면
# 2. 깃 액션으로 이슈 잠금 
# 3. 깃 핀 해제
